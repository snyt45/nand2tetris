class BiribiriGame {
    field Circle circle;
    field Cource cource;
    field int direction;

    constructor BiribiriGame new() {
        // 円を描画
        let circle = Circle.new(10, 10, 10);
        // コースを描画
        let cource = Cource.new();
        return this;
    }

    method void moveCircle() {
        if (direction = 1) { do circle.moveUp(); }
        if (direction = 2) { do circle.moveDown(); }
        if (direction = 3) { do circle.moveLeft(); }
        if (direction = 4) { do circle.moveRight(); }
        // 当たり判定(当たったら、プログラムの実行終了)
        //do cource.collisionDirection(circle);
        //do Sys.wait(5);
        return;
    }

    method void run() {
        var char key;
        var boolean exit;
        let exit = false;

        // qキーを押下するまで、ループさせる
        while (~exit) {
            // キーが何も押されていない間、ループさせる
            // ループ中に、キーが何か押されたらループを抜ける
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do moveCircle();
            }

            if (key = 81)  { let exit = true; }     // q key
            //if (key = 90)  { do circle.decSize(); } // z key
            //if (key = 88)  { do circle.incSize(); } // x key
            if (key = 131) { let direction = 1; }   // up arrow
            if (key = 133) { let direction = 2; }   // down arrow
            if (key = 130) { let direction = 3; }   // left arrow
            if (key = 132) { let direction = 4; }   // right arrow

            // キーが何か押されている間、ループさせる
            // ループ中に、キーが何も押されなければループを抜ける
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveCircle();
            }
        }
        return;
    }
}
