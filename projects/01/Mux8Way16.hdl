// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux4Way16(a[0]=a[0], b[0]=c[0], c[0]=e[0], d[0]=g[0], sel[1]=sel[2], sel[0]=sel[1], out[0]=w0);
    Mux4Way16(a[1]=a[1], b[1]=c[1], c[1]=e[1], d[1]=g[1], sel[1]=sel[2], sel[0]=sel[1], out[1]=w1);
    Mux4Way16(a[2]=a[2], b[2]=c[2], c[2]=e[2], d[2]=g[2], sel[1]=sel[2], sel[0]=sel[1], out[2]=w2);
    Mux4Way16(a[3]=a[3], b[3]=c[3], c[3]=e[3], d[3]=g[3], sel[1]=sel[2], sel[0]=sel[1], out[3]=w3);
    Mux4Way16(a[4]=a[4], b[4]=c[4], c[4]=e[4], d[4]=g[4], sel[1]=sel[2], sel[0]=sel[1], out[4]=w4);
    Mux4Way16(a[5]=a[5], b[5]=c[5], c[5]=e[5], d[5]=g[5], sel[1]=sel[2], sel[0]=sel[1], out[5]=w5);
    Mux4Way16(a[6]=a[6], b[6]=c[6], c[6]=e[6], d[6]=g[6], sel[1]=sel[2], sel[0]=sel[1], out[6]=w6);
    Mux4Way16(a[7]=a[7], b[7]=c[7], c[7]=e[7], d[7]=g[7], sel[1]=sel[2], sel[0]=sel[1], out[7]=w7);
    Mux4Way16(a[8]=a[8], b[8]=c[8], c[8]=e[8], d[8]=g[8], sel[1]=sel[2], sel[0]=sel[1], out[8]=w8);
    Mux4Way16(a[9]=a[9], b[9]=c[9], c[9]=e[9], d[9]=g[9], sel[1]=sel[2], sel[0]=sel[1], out[9]=w9);
    Mux4Way16(a[10]=a[10], b[10]=c[10], c[10]=e[10], d[10]=g[10], sel[1]=sel[2], sel[0]=sel[1], out[10]=w10);
    Mux4Way16(a[11]=a[11], b[11]=c[11], c[11]=e[11], d[11]=g[11], sel[1]=sel[2], sel[0]=sel[1], out[11]=w11);
    Mux4Way16(a[12]=a[12], b[12]=c[12], c[12]=e[12], d[12]=g[12], sel[1]=sel[2], sel[0]=sel[1], out[12]=w12);
    Mux4Way16(a[13]=a[13], b[13]=c[13], c[13]=e[13], d[13]=g[13], sel[1]=sel[2], sel[0]=sel[1], out[13]=w13);
    Mux4Way16(a[14]=a[14], b[14]=c[14], c[14]=e[14], d[14]=g[14], sel[1]=sel[2], sel[0]=sel[1], out[14]=w14);
    Mux4Way16(a[15]=a[15], b[15]=c[15], c[15]=e[15], d[15]=g[15], sel[1]=sel[2], sel[0]=sel[1], out[15]=w15);

    Mux4Way16(a[0]=b[0], b[0]=d[0], c[0]=f[0], d[0]=h[0], sel[1]=sel[2], sel[0]=sel[1], out[0]=z0);
    Mux4Way16(a[1]=b[1], b[1]=d[1], c[1]=f[1], d[1]=h[1], sel[1]=sel[2], sel[0]=sel[1], out[1]=z1);
    Mux4Way16(a[2]=b[2], b[2]=d[2], c[2]=f[2], d[2]=h[2], sel[1]=sel[2], sel[0]=sel[1], out[2]=z2);
    Mux4Way16(a[3]=b[3], b[3]=d[3], c[3]=f[3], d[3]=h[3], sel[1]=sel[2], sel[0]=sel[1], out[3]=z3);
    Mux4Way16(a[4]=b[4], b[4]=d[4], c[4]=f[4], d[4]=h[4], sel[1]=sel[2], sel[0]=sel[1], out[4]=z4);
    Mux4Way16(a[5]=b[5], b[5]=d[5], c[5]=f[5], d[5]=h[5], sel[1]=sel[2], sel[0]=sel[1], out[5]=z5);
    Mux4Way16(a[6]=b[6], b[6]=d[6], c[6]=f[6], d[6]=h[6], sel[1]=sel[2], sel[0]=sel[1], out[6]=z6);
    Mux4Way16(a[7]=b[7], b[7]=d[7], c[7]=f[7], d[7]=h[7], sel[1]=sel[2], sel[0]=sel[1], out[7]=z7);
    Mux4Way16(a[8]=b[8], b[8]=d[8], c[8]=f[8], d[8]=h[8], sel[1]=sel[2], sel[0]=sel[1], out[8]=z8);
    Mux4Way16(a[9]=b[9], b[9]=d[9], c[9]=f[9], d[9]=h[9], sel[1]=sel[2], sel[0]=sel[1], out[9]=z9);
    Mux4Way16(a[10]=b[10], b[10]=d[10], c[10]=f[10], d[10]=h[10], sel[1]=sel[2], sel[0]=sel[1], out[10]=z10);
    Mux4Way16(a[11]=b[11], b[11]=d[11], c[11]=f[11], d[11]=h[11], sel[1]=sel[2], sel[0]=sel[1], out[11]=z11);
    Mux4Way16(a[12]=b[12], b[12]=d[12], c[12]=f[12], d[12]=h[12], sel[1]=sel[2], sel[0]=sel[1], out[12]=z12);
    Mux4Way16(a[13]=b[13], b[13]=d[13], c[13]=f[13], d[13]=h[13], sel[1]=sel[2], sel[0]=sel[1], out[13]=z13);
    Mux4Way16(a[14]=b[14], b[14]=d[14], c[14]=f[14], d[14]=h[14], sel[1]=sel[2], sel[0]=sel[1], out[14]=z14);
    Mux4Way16(a[15]=b[15], b[15]=d[15], c[15]=f[15], d[15]=h[15], sel[1]=sel[2], sel[0]=sel[1], out[15]=z15);

    Mux16(a[0]=w0, b[0]=z0, sel=sel[0], out[0]=out[0]);
    Mux16(a[1]=w1, b[1]=z1, sel=sel[0], out[1]=out[1]);
    Mux16(a[2]=w2, b[2]=z2, sel=sel[0], out[2]=out[2]);
    Mux16(a[3]=w3, b[3]=z3, sel=sel[0], out[3]=out[3]);
    Mux16(a[4]=w4, b[4]=z4, sel=sel[0], out[4]=out[4]);
    Mux16(a[5]=w5, b[5]=z5, sel=sel[0], out[5]=out[5]);
    Mux16(a[6]=w6, b[6]=z6, sel=sel[0], out[6]=out[6]);
    Mux16(a[7]=w7, b[7]=z7, sel=sel[0], out[7]=out[7]);
    Mux16(a[8]=w8, b[8]=z8, sel=sel[0], out[8]=out[8]);
    Mux16(a[9]=w9, b[9]=z9, sel=sel[0], out[9]=out[9]);
    Mux16(a[10]=w10, b[10]=z10, sel=sel[0], out[10]=out[10]);
    Mux16(a[11]=w11, b[11]=z11, sel=sel[0], out[11]=out[11]);
    Mux16(a[12]=w12, b[12]=z12, sel=sel[0], out[12]=out[12]);
    Mux16(a[13]=w13, b[13]=z13, sel=sel[0], out[13]=out[13]);
    Mux16(a[14]=w14, b[14]=z14, sel=sel[0], out[14]=out[14]);
    Mux16(a[15]=w15, b[15]=z15, sel=sel[0], out[15]=out[15]);
}
